plugins {
    alias(libs.plugins.android.application)
    alias(libs.plugins.kotlin.android)

    id("com.google.gms.google-services")
    id("com.google.firebase.crashlytics")
}

android.buildFeatures.buildConfig true

// Load properties from local.properties
def localProperties = new Properties()
def localPropertiesFile = rootProject.file("local.properties")
if (localPropertiesFile.exists()) {
    localProperties.load(new FileInputStream(localPropertiesFile))
}

// Access the API key from local.properties
def MQTT_SERVER_URI = localProperties.getProperty("MQTT_SERVER_URI")
def MQTT_USERNAME = localProperties.getProperty("MQTT_USERNAME")
def MQTT_PASSWORD = localProperties.getProperty("MQTT_PASSWORD")
def MQTT_QOS = localProperties.getProperty("MQTT_QOS")

android {
    namespace 'com.mwnl.rttmas_android'
    compileSdk 35

    defaultConfig {
        applicationId "com.mwnl.rttmas_android"
        minSdk 28
        targetSdk 35
        versionCode 1
        versionName '1.0t2'

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            buildConfigField "String",  "MQTT_SERVER_URI",  "\"${MQTT_SERVER_URI}\""
            buildConfigField "String",  "MQTT_USERNAME",    "\"${MQTT_USERNAME}\""
            buildConfigField "String",  "MQTT_PASSWORD",    "\"${MQTT_PASSWORD}\""
            buildConfigField "int",     "MQTT_QOS",         "${MQTT_QOS}"
        }

        debug {
            buildConfigField "String",  "MQTT_SERVER_URI",  "\"${MQTT_SERVER_URI}\""
            buildConfigField "String",  "MQTT_USERNAME",    "\"${MQTT_USERNAME}\""
            buildConfigField "String",  "MQTT_PASSWORD",    "\"${MQTT_PASSWORD}\""
            buildConfigField "int",     "MQTT_QOS",         "${MQTT_QOS}"
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    externalNativeBuild {
        cmake {
            path file('src/main/cpp/CMakeLists.txt')
            version '3.22.1'
        }
    }
    buildFeatures {
        viewBinding true
    }
}

dependencies {

    implementation libs.androidx.core.ktx
    implementation libs.androidx.appcompat
    implementation libs.material
    implementation libs.androidx.constraintlayout
    implementation libs.androidx.lifecycle.livedata.ktx
    implementation libs.androidx.lifecycle.viewmodel.ktx
    implementation libs.androidx.navigation.fragment.ktx
    implementation libs.androidx.navigation.ui.ktx
    implementation libs.androidx.legacy.support.v4
    implementation libs.androidx.fragment.ktx


    testImplementation libs.junit
    androidTestImplementation libs.androidx.junit
    androidTestImplementation libs.androidx.espresso.core


    // Camera
    implementation libs.androidx.camera.core
    implementation libs.androidx.camera.lifecycle
    implementation libs.androidx.camera.view
    implementation libs.androidx.camera.camera2


    // Material UI
    implementation libs.androidx.material3.android
    implementation libs.androidx.material3.common.android


    // ML Kit OCR
    implementation libs.text.recognition
    implementation libs.play.services.vision
    implementation libs.play.services.mlkit.text.recognition


    // Paho MQTT
    implementation libs.org.eclipse.paho.client.mqttv3
    implementation libs.org.eclipse.paho.android.service


    // Firebase FCM
    implementation platform(libs.firebase.bom)
    implementation libs.firebase.messaging

    // Firebase Crashlytics and Analytics
    implementation libs.firebase.crashlytics
//    implementation libs.firebase.analytics

    // GPS Location
    implementation libs.play.services.location

}